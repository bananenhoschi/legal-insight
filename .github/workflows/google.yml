name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: legal-insight
  GAR_LOCATION: europe-west6
  GKE_CLUSTER: legal-insight-cluster
  GKE_ZONE: europe-west6
  DEPLOYMENT_NAME: legal-insight-deployment # TODO: update to deployment name
  FRONTEND_REPOSITORY: legal-insight-frontend
  BACKEND_REPOSITORY: legal-insight-backend # TODO: update to Artifact Registry docker repository
  FRONTEND_IMAGE: static-site
  BACKEND_IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/474102903978/locations/global/workloadIdentityPools/legal-insight-identity-pool/providers/legal-insight-oidc-provider'
        service_account: 'legal-insight-account@legal-insight.iam.gserviceaccount.com'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v1.0.2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
    - name: Get GKE Credentials
      # You may pin to the exact commit or the version.
      # uses: google-github-actions/get-gke-credentials@35ab0d2b2d48792c19f09325413bd185c8d44394
      uses: google-github-actions/get-gke-credentials@v1.0.2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ env.PROJECT_ID }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    
    # Build the Docker image
    - name: Build Frontend
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$FRONTEND_REPOSITORY/legal-insight-frontend:GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          ./frontend
    - name: Build Backend
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$BACKEND_REPOSITORY/legal-insight-backend:GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          ./backend
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$FRONTEND_REPOSITORY/legal-insight-frontend:GITHUB_SHA"
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$FRONTEND_REPOSITORY/legal-insight-backend:GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy Frontend
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image europe-west6-docker.pkg.dev/legal-insight/legal-insight-frontend:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$FRONTEND_REPOSITORY/legal-insight-frontend:$GITHUB_SHA
        ./kustomize edit set image europe-west6-docker.pkg.dev/legal-insight/legal-insight-backend:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$BACKEND_REPOSITORY/legal-insight-backend:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
